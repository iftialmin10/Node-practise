git status
git add .
git commit -m " my commit message"
git push origin master

extra
git pull origin main

Before running any Nodejs code always check node module. If not there any node module than install it by "npm install". Another important thing is when we upload any
code in github or share code with someone by zip than remove the node module file. 

In node always check folder name in which we run the code by terminal
After installing nodemon in windows first check version. If no version show then go to nodemon folder in C drive and delete ps1 file
For stop nodemon press 'ctrl+C'

Version of npm
chalk@2.4.1
validator@10.8.0
nodemon@1.18.5
request@2.88.0

At the time of installing npm module we face ton of question and we set the answer by default. For avoiding this after write "npm init" press "ctrl+c" to shutdown. After that use "npm init -y" to set all value as default.

debugger: in our programme we used console.log() for debug our programme. Its a basic tool and also time consuming. Everytime we write console than again need to remove those line. By default debugger dont pause the programme. For running this we have to use "inspect" after "node" keyword and remaining all are same. Through debugger we can go to developer mode and can see everything in chrome browser. After that go to "chrome://inspect". If u dont see anything under remote target than u have to configure it , for this u have configure this as same as listening option in console "127.0.0.1:9229". After that go to any of the inspect mode and ta ta new window open with new thing. In other language there are main function in which programme can run but in chrome 8 there a function called script run the programme from top to bottom. To access all the file from developer tool u have to add folder from left_side bar. press Esc button for toggle console. If u close the developer tool and want to debug again than simply write "restart" keyword in vscode console. If u want to close the developer tool than repeat twice "ctrl+c". After working with debugger than remove the keyword from programme.

Asynchronous:
In Asynchronous Node.js there are script, console, callstack, Node_APIs, callback queue and event loop. In nodejs there have by default main function which holds the whole script. Call stack holds the function only when the function is called and when the function done the its also pop off from the stack . console.log is also a function. Javascript is a single thread programming language but Nodejs is not a single thread language. If any function of Javascript not supported in v8 engine btu nodejs support them by itself with c++ language and than nodejs register this function in Node APIs . Since programme is written in single thread but nodejs have other thread remaining in c++ thats why we dont have to completely wait and this is the non blocking nature of nodejs. Javascript is a single threaded its work with function following call stack but node js by c++ its handle the events in Node_APIs. Callback queue maintain a list of all of the call back function that are ready to get executed. Callback queue always check the Node APIs register list, and wait for which event done first its work. After finishing first work done in Node APIs , callback queue check there are any function remaining inside the callback queue, if remaining than execute them first than look after to callback queue, if not than it pick up the iteam from Node APIs to callback queue and ready to execute. Before executed it needed to added to the call stack thats where function go to run. In this stage event loop play its role. event loop did two things here , 1st one is it check call stack queue is empty or not , if empty than it added callback function to call stack to execute, 2nd one is checking callback queue has any iteam or not, if remaining it added to call stack and if not remaing than it pick a finished function from Node APIs. Event loop keep waiting callback queue until the main function pop off from the call stack queue. Node is an non blocking system thats why it print randomly finished work.

Collect weather data from "openweathermap"

For chrome browser read json data add extension "JSON Fromatter"

mapbox offer location web based service